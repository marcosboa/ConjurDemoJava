on: [push]

name: Docker PHP Demo

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Docker
        run: |
          echo "FROM php:apache" > Dockerfile
          echo "COPY index.php /var/www/html/" >> Dockerfile

      - name: Criar arquivo index.php
        run: |
          cat > index.php << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
          <title>Login</title>
          </head>
          <body>
          <h1>Login</h1>
          <form method="post">
            <label for="username">Usuário:</label><br>
            <input type="text" id="username" name="username"><br><br>
            <label for="password">Senha:</label><br>
            <input type="password" id="password" name="password"><br><br>
            <input type="submit" value="Login">
          </form>
          <?php
          if ($_SERVER["REQUEST_METHOD"] == "POST") {
              $username = $_POST["username"];
              $password = $_POST["password"];
              
              // Autenticação básica (substitua pelas credenciais do Conjur)
              $valid_user = "admin";  // Será substituído pelo Conjur
              $valid_pass = "secret"; // Será substituído pelo Conjur
              
              if ($username === $valid_user && $password === $valid_pass) {
                  echo "<p style='color:green'>Login bem-sucedido!</p>";
              } else {
                  echo "<p style='color:red'>Credenciais inválidas.</p>";
              }
          }
          ?>
          </body>
          </html>
          EOF

      - name: Construir imagem Docker
        run: |
          docker build -t php-demo2 . || exit 1

      - name: Executar container Docker
        run: |
          docker run -d -p 8082:80 \
            -e VALID_USER=${{ secrets.DB_USERNAME }} \
            -e VALID_PASS=${{ secrets.DB_PASSWORD }} \
            --name php-login-app \
            php-demo2

  conjur-integration:
    runs-on: self-hosted
    permissions:
      id-token: 'write'
      contents: 'read'
    steps:
      - name: Import Secrets from CyberArk Conjur
        uses: cyberark/conjur-action@v2.0.5
        with:
          url: ${{ secrets.CONJUR_URL }}
          account: cyberarkdemo
          authn_id: ${{ secrets.CONJUR_AUTHN_ID }}
          secrets: |
            db/sqlusername|DB_USERNAME
            db/sql_password|DB_PASSWORD
