on: [push]

name: Docker PHP Demo with Conjur Integration

jobs:
  deploy-with-conjur:
    runs-on: self-hosted
    permissions:
      id-token: write  # Permissão para OIDC
      contents: read
    
    steps:
      # Passo 1: Checkout do código
      - name: Checkout código
        uses: actions/checkout@v4

      # Passo 2: Gerar token JWT para Conjur
      - name: Generate JWT Token
        id: jwt
        run: |
          echo "OIDC_TOKEN=$(curl -sLS \
            -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            -H "Accept: application/json; api-version=2.0" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL" \
            | jq -r '.value')" >> $GITHUB_OUTPUT

      # Passo 3: Obter segredos do Conjur
      - name: Get Secrets from Conjur
        id: conjur-secrets
        uses: cyberark/conjur-action@v2.0.5
        with:
          url: ${{ secrets.CONJUR_URL }}
          account: cyberarkdemo
          authn_id: ${{ secrets.CONJUR_AUTHN_ID }}
          jwt_token: ${{ steps.jwt.outputs.OIDC_TOKEN }}
          secrets: |
            db/sqlusername|DB_USERNAME
            db/sql_password|DB_PASSWORD

      # Passo 4: Criar Dockerfile e aplicação PHP
      - name: Setup PHP Application
        run: |
          # Criar Dockerfile
          cat > Dockerfile << 'EOF'
          FROM php:apache
          COPY index.php /var/www/html/
          EOF

          # Criar index.php com tratamento de variáveis de ambiente
          cat > index.php << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>Login</title></head>
          <body>
            <h1>Login</h1>
            <form method="post">
              <label for="username">Usuário:</label><br>
              <input type="text" id="username" name="username"><br><br>
              <label for="password">Senha:</label><br>
              <input type="password" id="password" name="password"><br><br>
              <input type="submit" value="Login">
            </form>
            <?php
            if ($_SERVER["REQUEST_METHOD"] == "POST") {
                $valid_user = getenv('VALID_USER');
                $valid_pass = getenv('VALID_PASS');
                
                if ($_POST["username"] === $valid_user && 
                    $_POST["password"] === $valid_pass) {
                    echo "<p style='color:green'>Login realizado com sucesso!</p>";
                } else {
                    echo "<p style='color:red'>Credenciais inválidas.</p>";
                }
            }
            ?>
          </body>
          </html>
          EOF

      # Passo 5: Construir e executar container
      - name: Deploy Docker Container
        run: |
          # Parar e remover container existente
          docker stop php-login-app || true
          docker rm php-login-app || true
          
          # Construir e executar com variáveis de ambiente
          docker build -t php-demo .
          docker run -d -p 8082:80 \
            -e VALID_USER=${{ steps.conjur-secrets.outputs.DB_USERNAME }} \
            -e VALID_PASS=${{ steps.conjur-secrets.outputs.DB_PASSWORD }} \
            --name php-login-app \
            php-demo
